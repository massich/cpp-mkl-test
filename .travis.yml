sudo: false

language:
  - cpp

env:
  global:
    - secure: "ReYURSvDLRz078njJgh2i/KvwLc/3fGPkgjf6mLLoHWgz7vSuh24B5z10Th2UMQo9op66qcZ2WcooYIqeEHGbmYuBGGKd2axsGUEXqoclG9SdNsa5BoCA9iiLlLiMgIO+Kp1EuSbWcrpVRs/BiXya1iN+lpBErsWHGaXJP8idexnCepMLYgzUDu/FNuZJwRHMX1cvqK7wxOkCwXJRqEfbA+fn1/oCb+YAPpEet12kFNu1RRk6g+ui7g5XuAVHISj+UHbr5+GNYR6gD8476EkjUm38ssnPKxTvydj1QXcEw6weRDpevFByum5fDf2vHgojo5dNvhIio4gENkfbwbd2azVitHtE7boByb/AO3z3YcFhDRu0ETgCEZWIDrQWwkAubf+sB2MWyKGCPGQaECrVGDD2JzV6kX0lMCVaPQONggFBmJQwcHodLxXurpupmttJ+W4aZf5EsQsGPIYNegMnkdHAgTHxuPUtyDIlOJfTrUt1qPRh+yKGvmX7/C+AirXFIbxOemTdx3w0Y3CbhVxP2jDoP45rPzC17EI06gdQJaWzx5//LKkwcsAmox0bXrKHDOuMJNWVA6ZhBd3fGascMh4tgdSYc9yuRyAb0ygP0obUXp6PXU0TFxeenCaA9YAZrg6OXzS115lcnak8Xfyi+fmlfjrT8BSVk9bL9/3t2I="

cache:
  ccache: true
  directories:
    - $HOME/downloads

matrix:
  include:
    - os: linux
      compiler: clang
      env:
        - BACKEND=Intel10_64lp_seq
        - BUILD_STATIC=1
        - CMAKE_C_COMPILER=clang
        - CMAKE_CXX_COMPILER=clang++
    - os: linux
      compiler: clang
      env:
        - BACKEND=Intel10_64lp
        - BUILD_STATIC=1
        - CMAKE_C_COMPILER=clang
        - CMAKE_CXX_COMPILER=clang++
    - os: linux
      env:
        - BACKEND=Intel10_64lp_seq
        - BUILD_STATIC=1
    - os: linux
      env:
        - BACKEND=Intel10_64lp
        - BUILD_STATIC=1

before_install:
  # Dependencies required by the CI are installed in ${TRAVIS_BUILD_DIR}/deps/
  - DEPS_DIR="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p "${DEPS_DIR}"

  - export DL_DIR=$HOME/downloads
  - |
    function _download() {
        url="$1"; f="${2:-$(basename $url)}";
        if [ ! -e $DL_DIR/$f ] ; then
          mkdir -p $DL_DIR ;
          echo "Downloading: ${DL_DIR}/$f" ;
          travis_retry wget --no-verbose $url -O $DL_DIR/$f ;
        else
          echo "Reading from cache: ${DL_DIR}/$f" ;
        fi
    }
  - function download() { _download "$1" "" ; }

  # Travis machines have 2 cores
  - JOBS=2

  - cd "${DEPS_DIR}"
  ############################################################################
  # Install a recent CMake (unless already installed on OS X)
  ############################################################################
  - CMAKE_VERSION=3.10.1
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      CMAKE_URL="https://cmake.org/files/v${CMAKE_VERSION%.[0-9]}/cmake-${CMAKE_VERSION}-Linux-x86_64.tar.gz"
      mkdir cmake && travis_retry wget --no-verbose --no-check-certificate -O - ${CMAKE_URL} | tar --strip-components=1 -xz -C cmake
      export PATH=${DEPS_DIR}/cmake/bin:${PATH}
    else
      brew install cmake || brew upgrade cmake
      if [[ "${BACKEND}" == "OpenBLAS" ]]; then
        brew install openblas
      fi
    fi
  - which cmake
  - cmake --version

  ############################################################################
  # Install MKL
  ############################################################################
  - |
    if [[ "${BACKEND}" == *"Intel"* ]]; then
      if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
        export MKL_INSTALL_DIR=$(pwd)/intel
        export ARCH_FNAME=l_mkl_2018.0.128.tgz
        download http://registrationcenter-download.intel.com/akdlm/irc_nas/tec/12070/${ARCH_FNAME}
        tar -xzf $DL_DIR/${ARCH_FNAME}
        cat l_mkl_2018.0.128/silent.cfg | grep -v EULA | grep -v PSET_INSTALL_DIR > silent.cfg
        echo "ACCEPT_EULA=accept" >> silent.cfg
        echo "PSET_INSTALL_DIR=${MKL_INSTALL_DIR}" >> silent.cfg
        ./l_mkl_2018.0.128/install.sh --user-mode -s ./silent.cfg
        export LD_LIBRARY_PATH="${MKL_INSTALL_DIR}/mkl/lib/intel64/:${LD_LIBRARY_PATH}"
        . ${MKL_INSTALL_DIR}/mkl/bin/mklvars.sh intel64 ilp64
      else  # Mac
        export MKL_INSTALL_DIR=/opt/intel
        export ARCH_FNAME=m_mkl_2017.4.220.dmg
        download http://registrationcenter-download.intel.com/akdlm/irc_nas/tec/12185/${ARCH_FNAME}
        hdiutil attach $DL_DIR/${ARCH_FNAME}
        cat /Volumes/m_mkl_2017.4.220/m_mkl_2017.4.220.app/Contents/MacOS/silent.cfg | grep -v EULA | grep -v PSET_INSTALL_DIR > silent.cfg
        echo "ACCEPT_EULA=accept" >> silent.cfg
        echo "PSET_INSTALL_DIR=${MKL_INSTALL_DIR}" >> silent.cfg
        sudo /Volumes/m_mkl_2017.4.220/m_mkl_2017.4.220.app/Contents/MacOS/install.sh -s ./silent.cfg
        . /opt/intel/mkl/bin/mklvars.sh intel64 ilp64
      fi
    fi

script:
  - cd ${TRAVIS_BUILD_DIR}
  - mkdir -p build && cd build
  - export CMAKE_OPTIONS="-DCMAKE_CXX_STANDARD=11 -DBLA_VENDOR=$BACKEND"
  - |
    if [[ "${BUILD_STATIC}" == "1" ]]; then
      export CMAKE_OPTIONS="${CMAKE_OPTIONS} -DBLA_STATIC=ON"
    fi
  - if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then echo $LD_LIBRARY_PATH; fi
  - if [[ "${TRAVIS_OS_NAME}" == "osx" ]]; then echo $DYLD_LIBRARY_PATH; fi
  - echo "cmake .. ${CMAKE_OPTIONS}"
  - cmake .. ${CMAKE_OPTIONS} --debug-trycompile
  - make VERBOSE=1
  # - cmake --build .
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]; then
      ldd ./CMakeHelloWorld
    else  # Mac
      otool -L ./CMakeHelloWorld
    fi

after_success:
  - ./CMakeHelloWorld

after_failure:
  - cat CMakeFiles/CMakeOutput.log
  - cat CMakeFiles/CMakeError.log

notifications:
  email: false
